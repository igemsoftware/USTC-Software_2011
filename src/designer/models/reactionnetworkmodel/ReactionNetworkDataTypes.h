// THIS FILE IS AUTO-GENERATED BY PROTOCOMP.
// PLEASE DON'T EDIT THIS FILE MANUALLY.
// Generate Time: Thu Jun 30 00:21:42 2011

#ifndef REACTIONNETWORKDATATYPES_H
#define REACTIONNETWORKDATATYPES_H

#include <QMetaType>
#include <QScriptValue>

#include "models/common/ModelSymbol.h"

namespace ReactionNetworkDataTypes
{


	struct Reaction
	{
		bool reversible;
		symbollist_t reactants;
		symbollist_t modifiers;
		symbollist_t products;
		mathexpr_t kineticLaw;

		static QScriptValue toScriptValue(QScriptEngine *engine,   const Reaction &s)
		{
			QScriptValue obj = engine->newObject();
		obj.setProperty("reversible", s.reversible);
		obj.setProperty("reactants", s.reactants);
		obj.setProperty("modifiers", s.modifiers);
		obj.setProperty("products", s.products);
		obj.setProperty("kineticLaw", s.kineticLaw);
			return obj;
		}

		static void fromScriptValue(const QScriptValue &obj, Reaction &s)
		{
		s.reversible = qscriptvalue_cast<reversible>(obj.property("reversible"));
		s.reactants = qscriptvalue_cast<reactants>(obj.property("reactants"));
		s.modifiers = qscriptvalue_cast<modifiers>(obj.property("modifiers"));
		s.products = qscriptvalue_cast<products>(obj.property("products"));
		s.kineticLaw = qscriptvalue_cast<kineticLaw>(obj.property("kineticLaw"));
		}
	};
Q_DECLARE_METATYPE(Reaction);





	struct Compartment
	{
		// precisevalue_t size; ;; instance-value
		// valuelist_t contains; ;; instance-value

		static QScriptValue toScriptValue(QScriptEngine *engine,   const Compartment &s)
		{
			QScriptValue obj = engine->newObject();
			return obj;
		}

		static void fromScriptValue(const QScriptValue &obj, Compartment &s)
		{
		}
	};
Q_DECLARE_METATYPE(Compartment);





	struct Species
	{
		// symbol_t compartment; ;; instance-value
		// precisevalue_t initialamount; ;; instance-value
		// valuelist_t structure; ;; instance-value

		static QScriptValue toScriptValue(QScriptEngine *engine,   const Species &s)
		{
			QScriptValue obj = engine->newObject();
			return obj;
		}

		static void fromScriptValue(const QScriptValue &obj, Species &s)
		{
		}
	};
Q_DECLARE_METATYPE(Species);





	struct Chain
	{
		// symbol_t type; ;; instance-value
		// valuelist_t structure; ;; instance-value

		static QScriptValue toScriptValue(QScriptEngine *engine,   const Chain &s)
		{
			QScriptValue obj = engine->newObject();
			return obj;
		}

		static void fromScriptValue(const QScriptValue &obj, Chain &s)
		{
		}
	};
Q_DECLARE_METATYPE(Chain);





	struct Part
	{
		symbol_t type;
		valuelist_t structure;

		static QScriptValue toScriptValue(QScriptEngine *engine,   const Part &s)
		{
			QScriptValue obj = engine->newObject();
		obj.setProperty("type", s.type);
		obj.setProperty("structure", s.structure);
			return obj;
		}

		static void fromScriptValue(const QScriptValue &obj, Part &s)
		{
		s.type = qscriptvalue_cast<type>(obj.property("type"));
		s.structure = qscriptvalue_cast<structure>(obj.property("structure"));
		}
	};
Q_DECLARE_METATYPE(Part);





	struct Parameter
	{
		symbol_t id;
		symbol_t unit;
		mathsegexpr_t rule;

		static QScriptValue toScriptValue(QScriptEngine *engine,   const Parameter &s)
		{
			QScriptValue obj = engine->newObject();
		obj.setProperty("id", s.id);
		obj.setProperty("unit", s.unit);
		obj.setProperty("rule", s.rule);
			return obj;
		}

		static void fromScriptValue(const QScriptValue &obj, Parameter &s)
		{
		s.id = qscriptvalue_cast<id>(obj.property("id"));
		s.unit = qscriptvalue_cast<unit>(obj.property("unit"));
		s.rule = qscriptvalue_cast<rule>(obj.property("rule"));
		}
	};
Q_DECLARE_METATYPE(Parameter);





	struct Unit
	{
		symbol_t name;
		valuelist_t ratio;

		static QScriptValue toScriptValue(QScriptEngine *engine,   const Unit &s)
		{
			QScriptValue obj = engine->newObject();
		obj.setProperty("name", s.name);
		obj.setProperty("ratio", s.ratio);
			return obj;
		}

		static void fromScriptValue(const QScriptValue &obj, Unit &s)
		{
		s.name = qscriptvalue_cast<name>(obj.property("name"));
		s.ratio = qscriptvalue_cast<ratio>(obj.property("ratio"));
		}
	};
Q_DECLARE_METATYPE(Unit);















}

#endif // REACTIONNETWORKDATATYPES_H
