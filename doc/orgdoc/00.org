* 四个概念

** View（视图、视角）

   View 指数据在屏幕上的表示。由于数据的种类繁杂，每种数据又具有不同的表示模式。所以每种模式需要一个单独的View。需要单独编写代码。
   在每个View下面可以修改其中*支持的*那部分数据。

   把这个概念推广一下，诸如对话框之类的一切"可见的"概念都包含在其中。

** Document(文档、文件)
   Documents 是数据在磁盘上的表示。在磁盘上的表示需要格式。之前提到的一些标准如SBML之类的就是这种。实际上每种标准的都很复杂。例如SBML有四个参差不齐的Levels，相当于四种格式。 想要全部支持是一件很复杂的事。

   推广这个概念，数据库，包括网络数据库也是Document。各种格式都不一样，全部需要单独处理。

** Model（模型）
   Model 是数据在内存中的表示。程序直接处理的就是Model中的数据。不要期望直接把Document映射成Model，因为前面提到的Document的规定很复杂，不但难以处理，而且最重要的是，无论哪一种标准都无法表示足够的数据。

** Features (功能)/ Extension (扩展)
   实现具体的功能，往往是生物相关的。抽象出来，它的作用就是对Model中的数据进行变换，然后更新View。


* 现在完成了什么

整体结构一早就搭起来了。但是接口（各部分相互界面的规则）还需要很多细致的修改，这肯定是个evolve的过程。

View 现在有六个，两个是对话框性质的，但是仍然需要美工进行设计类操作。 三个（之前提到的三个）的主要功能都已经有了。有一个纯文本编辑器可以直接映射到Document的。

Document 现在只有一种， SBML Document。 之后会添加一个 MoDeL Document，用来对liaochen师兄的软件提供支持(他的文件格式叫MoDeL，不要和1中的model混淆)。

Model 现在也只有一种，  Reaction Network Model。刻画 反应网络。 内部是由QtScript 实现的。 需要一些辅助函数

Feature 现在有pso和sa，正式名字叫做(呃……他们还没起名字 ) 。而且还没有整合进软件。Feature的支持这里还没定下来，我没用过matlab，关于mcc之类的东西移植性究竟怎样也不太了解。（在有matlab的机器上自然没问题，能在没有matlab的机器上跑么？）


* 接下来要做的-总体

就是在现有的基础上继续evolve啦。

** View：

要继续添加的View还有很多。包括之前邮件要求的 3D描点、绘图的View (用"Qwt3D"实现)，2D描点、绘图的View（正在考虑继续手工实现还是用Qwt）。假如很久以后想做序列分析什么的，也就是在新的View上操作。

在View之间切换的时候，主窗口会有相应的变化，菜单、工具栏、面板之类的会改变。

** Document：

需要添加的主要是几种数据的支持。另外基础设施方面，缺少通过URL从网络上打开文档、通过SQL从数据库中提取文档的相关处理。

** Model：

现在 Reaction Network Model 的标准还没完全定下来。 基本上是参照SBML，加入一些需要的功能的浆糊式的数据结构。我的想法是，允许数据量不足。比如参数未知，再比如物质种类未知。通过相应的Feature/Extension可以把这些数据得到，并且加进去。这样能兼容每一个软件了吧。

之前我看了一些诸如RSBPML、FASTA、SBOL这样的表示单个part内部结构的Document格式，大概放在一个新的model里面比较好。这个要不要做呢？

** Features：

iGame 2.0 和 ABCD 可以作为Feature 整合进来。此外还有一些小的feature在由"算法组"的人在做，我知道的有正在做的自动调参数、行为稳定性分析~
